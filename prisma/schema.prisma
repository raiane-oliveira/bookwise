generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String?  @unique
  avatar_url String?
  created_at DateTime @default(now())

  accounts       Account[]
  sessions       Session[]
  reviewed_books ReviewedBook[]

  @@map("users")
}

model Author {
  id         String   @id @default(uuid())
  name       String   @unique
  avatar_url String?
  created_at DateTime @default(now())

  books Book[]

  @@map("authors")
}

model Book {
  id         String   @id @default(uuid())
  name       String
  image_url  String?
  year       Int?
  rating     Float    @default(0)
  pages      Int
  created_at DateTime @default(now())

  authors        Author[]
  categories     Category[]
  reviewed_books ReviewedBook[]

  @@map("books")
}

model ReviewedBook {
  id         String   @id @default(uuid())
  review     String   @db.Text
  stars      Float
  created_at DateTime @default(now())

  user_id String
  book_id String

  user User @relation(fields: [user_id], references: [id])
  book Book @relation(fields: [book_id], references: [id])

  @@index([user_id])
  @@index([book_id])
  @@map("reviewed_books")
}

model Category {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())

  Book Book[]

  @@map("categories")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@index([user_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}
